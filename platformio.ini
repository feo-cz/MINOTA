[platformio]
build_dir = .pioenvs #req for espress 1.5.0
build_cache_dir = .cache
;core_dir = .platformio
boards_dir = boards
;boards_dir = ..\..\boards

[esp82xx_all]
framework = arduino
monitor_speed = 115200

; Optimize for size
build_flags = 
    -Os
    -flto
    -Wl,--gc-sections
    -ffunction-sections
    -fdata-sections
    -fno-exceptions
    -fno-rtti
    -Wl,--strip-all
    -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
    -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
    -DVTABLES_IN_FLASH
    -DPUYA_SUPPORT=1
    -Wl,-Map,firmware.map
    -w
    -mno-target-align
    
build_unflags = -mtarget-align
extra_scripts             = tools/strip-floats.py
                            tools/name-firmware.py
                            tools/gzip-firmware.py

[esp82xx_core_230_nospiff]
platform                  = espressif8266 @ 1.5.0                           ; core 2.3.0 -> PIO 1.5.0
platform_packages         = platformio/framework-arduinoespressif8266 @ ~1.20300.1
                            platformio/toolchain-xtensa @ ~2.40802.200502   ; use newer toolchain (smaller code)
                            platformio/tool-esptool @ ~1.413.0
board                     = esp01_1m
board_build.ldscript      = boards/eagle.flash.1m.ld
board_build.flash_mode    = dout
board_build.f_cpu         = 80000000L
board_build.f_flash       = 40000000L
monitor_speed             = 115200
upload_speed              = 115200

[esp82xx_core_274]
platform                  = espressif8266 @ 2.6.3                           ; core 2.7.4 -> PIO 2.6.3
build_flags               = -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
platform_packages         = #platformio/framework-arduinoespressif8266 @ ~3.20603.200130
	                        framework-arduinoespressif8266 @ https://github.com/feo-cz/Arduino.git#2.7.4-feo
                            platformio/toolchain-xtensa @ ~2.40802.200502   ; use newer toolchain (smaller code)
                            platformio/tool-esptool @ ~1.413.0
board                     = esp8285_1M128k

[env:esp82xx_1M_OTAonly_c230n]
#description = "Core 2.3.0 without spiff, no gzip, no OTA. Web only."
extends = esp82xx_all, esp82xx_core_230_nospiff
build_flags = ${esp82xx_all.build_flags}
              -DMINOTA_HTTPSERVER=0 #22.5kB
              -DMINOTA_OTASERVER=1 # 12.7kB
[env:esp82xx_1M_HTTPonly_c230n]
#description = "Core 2.3.0 without spiff, no gzip, no OTA. Web only."
extends = esp82xx_all, esp82xx_core_230_nospiff
build_flags = ${esp82xx_all.build_flags} 
              -DMINOTA_HTTPSERVER=1
              -DMINOTA_OTASERVER=0
[env:esp82xx_1M_uni_c230n]
#description = "Core 2.3.0 without spiff, no gzip, no OTA. Web only."
extends = esp82xx_all, esp82xx_core_230_nospiff
build_flags = ${esp82xx_all.build_flags} 
              -DMINOTA_HTTPSERVER=1
              -DMINOTA_OTASERVER=1
[env:esp82xx_1M_auto_c230n]
#description = "Core 2.3.0 without spiff, no gzip, no OTA. Web only."
extends = esp82xx_all, esp82xx_core_230_nospiff
build_flags = ${esp82xx_all.build_flags} 
              -DMINOTA_HTTPSERVER=0
              -DMINOTA_OTASERVER=0
              -DMINOTA_AUTO_UPDATE=1

[env:esp82xx_1M128_OTAonly_c274]
#description = "Core 2.7.4 with spiff, gzip supported. Web only."
extends = esp82xx_all, esp82xx_core_274
build_flags = ${esp82xx_all.build_flags} 
              ${esp82xx_core_274.build_flags}
              -DMINOTA_HTTPSERVER=0
              -DMINOTA_OTASERVER=1
[env:esp82xx_1M128_HTTPonly_c274]
#description = "Core 2.7.4 with spiff, gzip supported. Web only."
extends = esp82xx_all, esp82xx_core_274
build_flags = ${esp82xx_all.build_flags}
              ${esp82xx_core_274.build_flags}
              -DMINOTA_HTTPSERVER=1
              -DMINOTA_OTASERVER=0
[env:esp82xx_1M128_uni_c274]
#description = "Core 2.7.4 with spiff, gzip supported. Web only."
extends = esp82xx_all, esp82xx_core_274
build_flags = ${esp82xx_all.build_flags} 
              ${esp82xx_core_274.build_flags}
              -DMINOTA_HTTPSERVER=1
              -DMINOTA_OTASERVER=1
[env:esp82xx_1M128_auto_c274]
#description = "Core 2.7.4 with spiff, gzip supported. Web only."
extends = esp82xx_all, esp82xx_core_274
build_flags = ${esp82xx_all.build_flags} 
              ${esp82xx_core_274.build_flags}
              -DMINOTA_HTTPSERVER=0
              -DMINOTA_OTASERVER=0
              -DMINOTA_AUTO_UPDATE=1

[env:esp82xx_2M256_auto_c274]
extends = env:esp82xx_1M128_auto_c274
board = esp8266_2M256

#this is generally only for debugging minota,
#but can be used to upload minota over OTA
[env:esp82xx_1M128_uni_c274__OTAupload]
extends = env:esp82xx_1M128_uni_c274
upload_protocol = espota
#extra_scripts = tools\compressed_ota.py
upload_port = 192.168.0.X
upload_flags = 
               --auth=esprecovery
               --port=8266
